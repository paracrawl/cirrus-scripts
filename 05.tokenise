#!/bin/bash

SLANG="$1"
BATCH="$2"
THREADS=${THREADS:-8}

INPUT=sentences_en
OUTPUT=tokenised_en

if [[ "$SLANG" == "en" ]]; then
	INPUT=sentences
	OUTPUT=tokenised
fi

## preamble: setting up temporary run environment
if test -n "$SLURM_JOB_ID"; then 
	echo "Setting up ephemeral environment"
	RAMDIR=/tmp/tokenise.$$
	mkdir -p ${RAMDIR}

	cleanup () {
		echo "Cleaning up ephemeral environment..."
    	rm -rf ${RAMDIR} ${TMPDIR}/${OUTPUT}.$$.gz
	}
	trap cleanup EXIT

	(cd $MOSES/scripts && tar -cf - ./share ./tokenizer) | (cd $RAMDIR && tar -xf -)
	TOKENISE="$RAMDIR/tokenizer/tokenizer.perl"
	B64FILTER=$RAMDIR/b64filter
	CACHE=$RAMDIR/cache
	sbcast `which b64filter` $B64FILTER
	sbcast `which cache` $CACHE
	echo "Done."
else
	TOKENISE=$KPU/tokenizer/tokenizer.perl
	B64FILTER=$(which b64filter)
	CACHE=$(which cache)
fi

DOCENC=${DOCENC:-docenc}

set -euo pipefail
ulimit -n 16384

echo "Processing (${SLANG}) ${BATCH}"

< ${BATCH}/${IPUT}.gz gzip -dc \
| parallel --halt 2 -j $THREADS --tmpdir ${TMPDIR} --pipe -k -l 256 \
${B64FILTER} ${CACHE} ${TOKENISE} -a -q -l en \
| gzip -9c \
> ${TMPDIR}/tokenised_en.$$.gz

echo "Checking output"

docs_st=$(gzip -cd ${BATCH}/${INPUT}.gz | wc -l)
docs_tk=$(gzip -cd ${TMPDIR}/${OUTPUT}.$$.gz | wc -l)
echo "Expecting $docs_st documents, found $docs_tk"
test $docs_st -eq $docs_tk || exit 1

lines_st=$($DOCENC -d ${BATCH}/${INPUT}.gz | wc -l)
lines_tk=$($DOCENC -d ${TMPDIR}/${OUTPUT}.$$.gz | wc -l)
echo "Expecting $lines_st lines, found $lines_tk"
test $lines_st -eq $lines_tk || exit 1

rm -f ${BATCH}/${OUTPUT}.gz
mv ${TMPDIR}/${OUTPUT}.$$.gz ${BATCH}/${OUTPT}.gz

echo "Moved result (${SLANG}) ${BATCH}"
