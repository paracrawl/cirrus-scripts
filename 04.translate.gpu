#!/bin/bash
set -euo pipefail

SLANG="$1"
BATCH="$2"
INPUT="sentences"
OUTPUT="sentences_${TARGET_LANG}"
TMPDIR=${TMPDIR:-/tmp}

echo "Translating $SLANG $BATCH to $TARGET_LANG"
echo "Input size:" `ls -lh $BATCH/$INPUT.gz | cut -d' ' -f5` $BATCH
sentences=`gzip -dc $BATCH/$INPUT.gz | base64 -d | wc -l`
echo "Sentences: ${sentences}"

echo "Start:" `date` $BATCH

set -a # causes all the variables set in translate.sh to be exported
. ${SCRIPTS}/translate.sh
eval model_${SLANG}_${TARGET_LANG} || (echo "No model for ${SLANG} -> ${TARGET_LANG}" 1>&2 ; exit 255)
export -f $MODEL_IMPL
export MODEL
gzip -dc ${BATCH}/${INPUT}.gz \
    | b64filter \
    	cache \
    		bash -u -e -o pipefail -c ${MODEL_IMPL}' $@' -- $SLANG -d 0 --max-length 300 --max-length-crop \
    | gzip -9c > ${TMPDIR}/${OUTPUT}.$$.gz

echo "End:" `date` $BATCH

before=`gzip -dc ${BATCH}/${INPUT}.gz | wc -l`
after=`gzip -dc ${TMPDIR}/${OUTPUT}.$$.gz | wc -l`
echo "Check count $before -> $after $BATCH"
if [[ $before != $after ]]; then
	echo "Error: counts don't match"
	exit 1
fi

mv ${TMPDIR}/${OUTPUT}.$$.gz ${BATCH}/${OUTPUT}.gz
